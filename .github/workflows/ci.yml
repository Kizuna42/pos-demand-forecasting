name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10"]  # Focus on one version first

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install essential dependencies first
        run: |
          python -m pip install --upgrade pip
          pip install pytest pytest-cov black flake8 isort
          
      - name: Install core packages
        run: |
          pip install pandas numpy scikit-learn matplotlib seaborn scipy pyyaml requests loguru typer tqdm python-dotenv shap mkdocs
          
      - name: Create complete directory structure
        run: |
          mkdir -p data/raw data/processed reports logs output models
          mkdir -p reports/figures
          touch data/raw/.gitkeep
          touch data/processed/.gitkeep
          touch reports/.gitkeep
          
      - name: Setup environment variables
        run: |
          echo "PYTHONPATH=$(pwd)/src:$PYTHONPATH" >> $GITHUB_ENV
          
      - name: Lint with flake8
        run: |
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=99 --statistics
          
      - name: Check code formatting with black
        run: |
          black --check .
          
      - name: Check import sorting with isort
        run: |
          isort --check-only .
          
      - name: Test individual components first
        run: |
          echo "=== Testing basic functionality ==="
          python -m pytest tests/test_data.py -v --tb=short
          echo "=== Testing data processor ==="  
          python -m pytest tests/test_data_processor.py -v --tb=short
          echo "=== Testing model builder ==="
          python -m pytest tests/test_model_builder.py -v --tb=short
          
      - name: Run remaining tests
        run: |
          echo "=== Testing feature engineer ==="
          python -m pytest tests/test_feature_engineer.py -v --tb=short
          echo "=== Testing quality evaluator ==="
          python -m pytest tests/test_quality_evaluator.py -v --tb=short
          echo "=== Testing integration ==="
          python -m pytest tests/test_integration.py -v --tb=short
          
      - name: Run final complex tests
        run: |
          echo "=== Testing demand analyzer ==="
          python -m pytest tests/test_demand_analyzer.py -v --tb=short
          echo "=== Testing report generator ==="
          python -m pytest tests/test_report_generator.py -v --tb=short  
          echo "=== Testing want plotter ==="
          python -m pytest tests/test_want_plotter.py -v --tb=short
          echo "=== Testing end-to-end ==="
          python -m pytest tests/test_end_to_end.py -v --tb=short
          
      # Coverage reporting temporarily disabled for debugging
      # - name: Upload coverage to Codecov
      #   uses: codecov/codecov-action@v3
      #   with:
      #     file: ./coverage.xml
      #     flags: unittests
      #     name: codecov-umbrella
